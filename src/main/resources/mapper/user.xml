<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.user.model.mapper.UserMapper">
	<resultMap type="userDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_email" property="userEmail" />
		<result column="user_name" property="userName" />
		<result column="user_position" property="userPosition" />

	</resultMap>

	<select id="userInfo" parameterType="string" resultMap="user">
		select user_name, user_id, user_email , user_position
		from users
		where user_id = #{userId}
	</select>

	<select id="userLogin" parameterType="UserDto" resultMap="user">
		select user_id , user_email , user_name , user_position
		from users
		where user_id = #{userId} and user_password = #{userPassword}
	</select>

	<insert id="userRegist" parameterType="UserDto" >
		insert into users (user_id, user_email, user_name, user_password)
		values (#{userId}, #{userEmail}, #{userName}, #{userPassword})
	</insert>

	<delete id="userDelete" parameterType="String" >
		delete
		from users
		where user_id = #{userId}
	</delete>

	<update id="userUpdate" parameterType="UserDto">
		update users
		set user_email = #{userEmail} , user_name = #{userName} , user_password = #{userPassword}
		where user_id = #{userId}
	</update>

	<update id="userFindPassword" parameterType="Map">
		update users
		set user_password = #{userPassword}
		where user_id = #{userId} and user_email = #{userEmail}
	</update>


	<insert id="friendAccept" parameterType="Map">
		insert into friends (friend_following, friend_follower, friend_date)
		values (#{userId}, #{friendId} , now()) ,
			   (#{friendId}, #{userId} , now())
	</insert>

	<insert id="friendRequest" parameterType="Map">
		insert into friends_request(user_id , friend_id , request_date)
		values (#{userId} , #{friendId} , now())
	</insert>

	<delete id="friendDelete" parameterType="Map">
		delete
		from friends
		where friend_following = #{userId} and friend_follower = #{friendId} or friend_following = #{friendId} and friend_follower = #{userId}
	</delete>

	<select id="friendList" parameterType="String" resultType="String">
		select friend_follower
		from friends
		where friend_following = #{userId}
	</select>

	<insert id="userlike" parameterType="UserLikeDto">
		insert into likes(content_id , user_id , is_likes)
		values (#{contentId} , #{userId} , 1)
	</insert>

	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from users
		where user_id = #{userId}
	</select>

	<update id="saveRefreshToken" parameterType="map">
		update users
		set token = #{token}
		where user_id = #{userId}
	</update>

	<update id="deleteRefreshToken" parameterType="map">
		update users
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>

</mapper>